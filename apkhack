#!/bin/bash
set -e

# extract the apk
if [ ! -e build/apk/ ]; then
    if [ ! -e "$1" ]; then
        echo "Please specify the input APK"
        exit
    fi

    mkdir -p build/
    # TODO fix the need for sudo and chown
    sudo $(which apktool) d $1 -o build/apk
    sudo chown -R user:user build/apk
fi

# configure the source files
[ -e config ] && config=$(cat config)
mkdir -p build/src/
for filename in src/*; do
    newname=build/src/$(basename "$filename")
    cp $filename $newname
    for line in $config; do
        key=$(echo $line | cut -d ';' -f 1)
        value=$(echo $line | cut -d ';' -f 2)
        sed -i "s/$key/$(echo $value | sed 's/[\/&]/\\&/g')/g" "$newname"
    done
done

# copy the source files
for filename in build/src/*; do
    target=$(find build/apk/ -not -path "build/apk/build/*" -not -path "build/apk/original/*" -name "$(basename $filename)")
    [ "$(diff $filename $target)" = "" ] || cp "$filename" "$target"
done

# build the apk
# TODO fix the need for sudo and chown
sudo $(which apktool) b -o build/out.apk build/apk
zipalign -p -f 4 build/out.apk build/out-align.apk
mv -f build/out-align.apk build/out.apk
[ -e build/apkhack.keystore ] || keytool -genkey -v \
    -keystore build/apkhack.keystore -keyalg RSA -keysize 2048 -validity 10000 \
    -storepass password -dname "cn=Unknown, ou=Unknown, o=Unknown, c=Unknown"
apksigner sign --ks build/apkhack.keystore --ks-pass pass:password build/out.apk

# install the apk
if [ $(adb get-state 2> /dev/null) ]; then
    adb uninstall $(aapt2 dump packagename $1)
    adb install build/out.apk
fi
